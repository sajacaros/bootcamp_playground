# https://leetcode.com/problems/number-of-islands
# 200. Number of Islands

from collections import deque
from typing import List


def numIslands(grid: List[List[str]]) -> int:
    row_len, col_len = len(grid), len(grid[0])
    visited = [[False] * col_len for _ in range(row_len)]

    def is_valid(r, c):
        return True if (0 <= r < row_len) and (0 <= c < col_len) else False

    def bfs(row, col):
        q = deque()
        q.append((row, col))
        visited[row][col] = True
        direction = [(1,0), (0,1), (-1,0), (0,-1)]
        while q:
            cur_r, cur_c = q.popleft()
            for d in direction:
                next_r, next_c = cur_r + d[0], cur_c + d[1]
                if is_valid(next_r, next_c) and not visited[next_r][next_c] and grid[next_r][next_c]=="1":
                    visited[next_r][next_c] = True
                    q.append((next_r, next_c))

    count = 0
    for row in range(row_len):
        for col in range(col_len):
            if grid[row][col] == "1" and not visited[row][col]:
                print('visit')
                bfs(row, col)
                count += 1

    return count



# i1 =   [
#     ["1","1","1","1","0"],
#     ["1","1","0","1","0"],
#     ["1","1","0","0","0"],
#     ["0","0","0","0","0"]
# ]
# i1 = [
#     ["1","0","1","1","1"],
#     ["1","0","1","0","1"],
#     ["1","1","1","0","1"]
# ]
i1 = [["1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","0","1","0","1","1"],["0","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","0"],["1","0","1","1","1","0","0","1","1","0","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","0","1","1","1","1","1","1","0","1","1","1","0","1","1","1","0","1","1","1"],["0","1","1","1","1","1","1","1","1","1","1","1","0","1","1","0","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","1","1"],["1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["0","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","0","1","1","1","1","1","1","1","0","1","1","1","1","1","1"],["1","0","1","1","1","1","1","0","1","1","1","0","1","1","1","1","0","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","0"],["1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","0"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"]]
print(numIslands(i1)) # 1

# # visited = [[False] * 4] * 5
# visited = [[False] * 4 for _ in range(5)]
# print(visited)
# visited[0][0] = True
# print(visited)